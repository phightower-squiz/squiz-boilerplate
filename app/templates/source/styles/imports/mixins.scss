// REM font sizing with pixel fall back
// This technique will allow external font sizes to be set for html and respected
// if REMs are supported (everything but IE8 and older).
@mixin sq-font-size($sizeValue: 1){
  font-size: ($sizeValue * $base-font-pixel) + px;
  font-size: $sizeValue + rem;
}

// Transition shortcut
@mixin sq-transition($args: all 1s ease) {
    -webkit-transition: $args;
       -moz-transition: $args;
            transition: $args;
}

// 2D rotation with IE support
@mixin sq-rotate($deg) {
  $msRotVal: (((360 + $deg) % 360) / 90);   // Modulo lets us handle negative values.
    -webkit-transform: rotate($deg + deg);  // Chrome, Safari 3.1+
       -moz-transform: rotate($deg + deg);  // Firefox 3.5-15
        -ms-transform: rotate($deg + deg);  // IE 9
         -o-transform: rotate($deg + deg);  // Opera 10.50-12.00
            transform: rotate($deg + deg);  // Firefox 16+, IE 10+, Opera 12.10+
    filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$msRotVal});
}

// Glow effect taken from foundation
@mixin sq-block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:blue) {
  -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
  -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    -webkit-box-shadow: 0 0 5px $glowing-effect-color;
    -moz-box-shadow: 0 0 5px $glowing-effect-color;
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

// Border radius helper
@mixin sq-border-radius($radius: 4px) {
    border-radius: $radius;
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
}

// Box shadow (won't work in IE8 or older)
@mixin sq-box-shadow($args...) {
    -webkit-box-shadow: $args;
     -moz-box-shadow: $args;
          box-shadow: $args;
}

// Opacity
@mixin sq-opacity($value) {
    $decimal-value: $value/100;
    -khtml-opacity: $decimal-value;
    -webkit-opacity: $decimal-value;
    -moz-opacity: $decimal-value;
    opacity: $decimal-value;
    -ms-filter: #{"alpha(opacity=" + $value + ")"};
    filter: alpha(opacity=$value);
}

// Individual border radius rule helper.
@mixin sq-rounded($vert, $horz, $radius: 10px) {
    border-#{$vert}-#{$horz}-radius: $radius;
    -moz-border-radius-#{$vert}#{$horz}: $radius;
    -webkit-border-#{$vert}-#{$horz}-radius: $radius;
}

// Use an SVG background image (for perfect Retina-rendering) with a PNG fallback.
@mixin sq-svg-background($suffixless-url) {
    background-image: url($suffixless-url + ".svg");
    .no-svg & {
        background-image: url($suffixless-url + ".png");
    }
}

// Flex the content to fit
@mixin sq-flex($values) {
    // Table cell is a fallback to no flexbox support
    .flexbox & {
      -webkit-box-flex: $values;
      -moz-box-flex:  $values;
      -webkit-flex:  $values;
      -ms-flex:  $values;
      flex:  $values;
    }
    .no-js &,
    .no-flexbox & {
      display: table-cell;
      // Vertical align is needed to prevent auto vertical centering by some browsers
      vertical-align: top;
    }
}

// Em calculator based on James' in Squiz Map issue #4906
@mixin sq-calc-ems($prop, $numerator, $denominator) {
    $tmp: ($numerator/$denominator);
    #{$prop}: #{$tmp}em;
    #{$prop}: calc(#{$numerator}em / #{$denominator});
}

//  Spritesheet mixin (adewezlopez@squiz.net)
//  Loops through your spritesheet and creates classes for you to easily add icons to your elements, or you can extend them for use with pseudo elements.

//  1. Set your spritesheet in a grid of your choosing and enter the width and height of each cell in the variables below.
//  2. Enter the column length (horizontal count of cells)
//  3. Put your spritesheets in dist/css/mysource_files/
//  4. Name the cells as you wish, in the order as they appear in the spritesheet (left to right, top to bottom)
//  5. Use the icons by extending the class (@extend) e.g.

//  a[href$="doc"],
//  a[href$="docx"] {
//    &:before {
//      content: '';
//      @include inline-block();
//      vertical-align: middle;
//      @extend .icn-doc;
//    }
//  }

$sprite__icon-width: 50px;
$sprite__icon-height: 50px;
$sprite__column-length: 10;

$icon-names:
icn-pdf,
icn-doc,
icn-xls;

$x-count: 0;
$y-count: 0;

@each $name in $icon-names {
  $i: index($icon-names, $name);
  .#{$name} {
    @include sq-svg-background($spritesheet__src);
    background-position: $x-count * -$sprite__icon-width $y-count * -$sprite__icon-height;
  }
  @if $i % $sprite__column-length == 0 {
    $x-count: 0;
    $y-count: $y-count+1;
  } @else {
    $x-count: $x-count+1;
  }
}